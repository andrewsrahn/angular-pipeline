{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/banner/banner.component.ts","webpack:///./src/app/dashboard/dashboard-hero.component.css","webpack:///./src/app/dashboard/dashboard-hero.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/in-memory-data.service.ts","webpack:///./src/app/model/hero.service.ts","webpack:///./src/app/model/user.service.ts","webpack:///./src/app/shared/highlight.directive.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/title-case.pipe.ts","webpack:///./src/app/twain/twain.component.ts","webpack:///./src/app/twain/twain.data.ts","webpack:///./src/app/twain/twain.service.ts","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"app/hero/hero.module\": [\n\t\t\"./src/app/hero/hero.module.ts\",\n\t\t\"app-hero-hero-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\n@Component({\n  template: `\n  <h2 highlight=\"skyblue\">About</h2>\n  <h3>Quote of the day:</h3>\n  <twain-quote></twain-quote>\n  `\n})\nexport class AboutComponent { }\n","import { NgModule }       from '@angular/core';\nimport { RouterModule }   from '@angular/router';\n\nimport { AboutComponent } from './about/about.component';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      { path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n      { path: 'about', component: AboutComponent },\n      { path: 'heroes', loadChildren: 'app/hero/hero.module#HeroModule'}\n    ])\n  ],\n  exports: [ RouterModule ] // re-export the module declarations\n})\nexport class AppRoutingModule { };\n","module.exports = \"<app-banner></app-banner>\\n<app-welcome></app-welcome>\\n<nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>\\n  <a routerLink=\\\"/heroes\\\">Heroes</a>\\n  <a routerLink=\\\"/about\\\">About</a>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent { }\n","import { NgModule }         from '@angular/core';\nimport { BrowserModule }    from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent }     from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AboutComponent }   from './about/about.component';\nimport { BannerComponent }  from './banner/banner.component';\nimport { HeroService }      from './model/hero.service';\nimport { UserService }      from './model/user.service';\nimport { TwainComponent }   from './twain/twain.component';\nimport { TwainService }     from './twain/twain.service';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nimport { DashboardModule }  from './dashboard/dashboard.module';\nimport { SharedModule }     from './shared/shared.module';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService } from './in-memory-data.service';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    DashboardModule,\n    AppRoutingModule,\n    SharedModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    HttpClientInMemoryWebApiModule.forRoot(\n      InMemoryDataService, { dataEncapsulation: false }\n    )\n  ],\n  providers: [\n    HeroService,\n    TwainService,\n    UserService\n  ],\n  declarations: [\n    AppComponent,\n    AboutComponent,\n    BannerComponent,\n    TwainComponent,\n    WelcomeComponent ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  template: '<h1>{{title}}</h1>',\n  styles: ['h1 { color: green; font-size: 350%}']\n})\nexport class BannerComponent {\n  title = 'Test Tour of Heroes';\n}\n","module.exports = \".hero {\\n\\tpadding: 20px;\\n  position: relative;\\n\\ttext-align: center;\\n\\tcolor: #eee;\\n\\tmax-height: 120px;\\n\\tmin-width: 120px;\\n\\tbackground-color: #607D8B;\\n\\tborder-radius: 2px;\\n}\\n\\n.hero:hover {\\n  background-color: #EEE;\\n  cursor: pointer;\\n  color: #607d8b;\\n}\\n\\n@media (max-width: 600px) {\\n\\t.hero {\\n\\t  font-size: 10px;\\n\\t  max-height: 75px; }\\n}\\n\\n@media (max-width: 1024px) {\\n\\t.hero {\\n\\t  min-width: 60px;\\n\\t}\\n}\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { Hero } from '../model/hero';\n\n@Component({\n  selector: 'dashboard-hero',\n  template: `\n    <div (click)=\"click()\" class=\"hero\">\n      {{hero.name | uppercase}}\n    </div>`,\n  styleUrls: [ './dashboard-hero.component.css' ]\n})\nexport class DashboardHeroComponent {\n  @Input() hero: Hero;\n  @Output() selected = new EventEmitter<Hero>();\n  click() { this.selected.emit(this.hero); }\n}\n","module.exports = \"[class*='col-'] {\\n  float: left;\\n}\\n*, *:after, *:before {\\n\\tbox-sizing: border-box;\\n}\\nh3 {\\n  text-align: center; margin-bottom: 0;\\n}\\n[class*='col-'] {\\n  padding-right: 20px;\\n  padding-bottom: 20px;\\n}\\n[class*='col-']:last-of-type {\\n  padding-right: 0;\\n}\\n.grid {\\n  margin: 0;\\n}\\n.col-1-4 {\\n  width: 25%;\\n}\\n.grid-pad {\\n  padding: 10px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n  padding-right: 20px;\\n}\\n@media (max-width: 1024px) {\\n\\t.grid {\\n\\t  margin: 0;\\n\\t}\\n}\\n\"","module.exports = \"<h2 highlight>{{title}}</h2>\\n\\n<div class=\\\"grid grid-pad\\\">\\n  <dashboard-hero *ngFor=\\\"let hero of heroes\\\"  class=\\\"col-1-4\\\"\\n    [hero]=hero  (selected)=\\\"gotoDetail($event)\\\" >\\n  </dashboard-hero>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router }            from '@angular/router';\n\nimport { Hero }        from '../model/hero';\nimport { HeroService } from '../model/hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n\n  heroes: Hero[] = [];\n\n  constructor(\n    private router: Router,\n    private heroService: HeroService) {\n  }\n\n  ngOnInit() {\n    this.heroService.getHeroes()\n      .subscribe(heroes => this.heroes = heroes.slice(1, 5));\n  }\n\n  gotoDetail(hero: Hero) {\n    let url = `/heroes/${hero.id}`;\n    this.router.navigateByUrl(url);\n  }\n\n  get title() {\n    let cnt = this.heroes.length;\n    return cnt === 0 ? 'No Heroes' :\n      cnt === 1 ? 'Top Hero' :  `Top ${cnt} Heroes`;\n  }\n}\n","import { NgModule }               from '@angular/core';\nimport { RouterModule, Routes }   from '@angular/router';\n\nimport { SharedModule }           from '../shared/shared.module';\n\nimport { DashboardComponent }     from './dashboard.component';\nimport { DashboardHeroComponent } from './dashboard-hero.component';\n\nconst routes: Routes =  [\n  { path: 'dashboard',  component: DashboardComponent },\n];\n\n@NgModule({\n  imports:      [\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ DashboardComponent, DashboardHeroComponent ]\n})\nexport class DashboardModule { }\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\nimport { QUOTES } from './twain/twain.data';\n\n// Adjust to reduce number of quotes\nconst maxQuotes = Infinity; // 0;\n\n/** Create in-memory database of heroes and quotes */\nexport class InMemoryDataService implements InMemoryDbService {\n  createDb() {\n    const heroes = [\n      { id: 11, name: 'Mr. Nice' },\n      { id: 12, name: 'Narco' },\n      { id: 13, name: 'Bombasto' },\n      { id: 14, name: 'Celeritas' },\n      { id: 15, name: 'Magneta' },\n      { id: 16, name: 'RubberMan' },\n      { id: 17, name: 'Dynama' },\n      { id: 18, name: 'Dr IQ' },\n      { id: 19, name: 'Magma' },\n      { id: 20, name: 'Tornado' }\n    ];\n\n    return { heroes, quotes: QUOTES.slice(0, maxQuotes) };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { Hero } from './hero';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class HeroService {\n\n  readonly heroesUrl = 'api/heroes';  // URL to web api\n\n  constructor(private http: HttpClient) { }\n\n  /** GET heroes from the server */\n  getHeroes (): Observable<Hero[]> {\n    return this.http.get<Hero[]>(this.heroesUrl)\n      .pipe(\n        tap(heroes => this.log(`fetched heroes`)),\n        catchError(this.handleError('getHeroes'))\n      ) as Observable<Hero[]>;\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getHero<Data>(id: number | string): Observable<Hero> {\n    if (typeof id === 'string') {\n      id = parseInt(id as string, 10);\n    }\n    const url = `${this.heroesUrl}/?id=${id}`;\n    return this.http.get<Hero[]>(url)\n      .pipe(\n        map(heroes => heroes[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} hero id=${id}`);\n        }),\n        catchError(this.handleError<Hero>(`getHero id=${id}`))\n      );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new hero to the server */\n  addHero (hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, httpOptions).pipe(\n      tap((hero: Hero) => this.log(`added hero w/ id=${hero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n  /** DELETE: delete the hero from the server */\n  deleteHero (hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero (hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n  /**\n   * Returns a function that handles Http operation failures.\n   * This error handler lets the app continue to run as if no error occurred.\n   * @param operation - name of the operation that failed\n   */\n  private handleError<T> (operation = 'operation') {\n    return (error: HttpErrorResponse): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      const message = (error.error instanceof ErrorEvent) ?\n        error.error.message :\n       `server returned code ${error.status} with body \"${error.error}\"`;\n\n      // TODO: better job of transforming error for user consumption\n      throw new Error(`${operation} failed: ${message}`);\n    };\n\n  }\n\n  private log(message: string) {\n    console.log('HeroService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UserService {\n  isLoggedIn = true;\n  user = {name: 'Sam Spade'};\n}\n","import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\n\n@Directive({ selector: '[highlight]' })\n/** Set backgroundColor for the attached element to highlight color\n *  and set the element's customProperty to true */\nexport class HighlightDirective implements OnChanges {\n\n  defaultColor =  'rgb(211, 211, 211)'; // lightgray\n\n  @Input('highlight') bgColor: string;\n\n  constructor(private el: ElementRef) {\n    el.nativeElement.style.customProperty = true;\n  }\n\n  ngOnChanges() {\n    this.el.nativeElement.style.backgroundColor = this.bgColor || this.defaultColor;\n  }\n}\n","import { NgModule }      from '@angular/core';\nimport { CommonModule }  from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\n\nimport { HighlightDirective } from './highlight.directive';\nimport { TitleCasePipe }      from './title-case.pipe';\n\n@NgModule({\n  imports: [ CommonModule ],\n  exports: [\n    CommonModule,\n    // SharedModule importers won't have to import FormsModule too\n    FormsModule,\n    HighlightDirective,\n    TitleCasePipe\n  ],\n  declarations: [ HighlightDirective, TitleCasePipe ]\n})\nexport class SharedModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'titlecase', pure: true})\n/** Transform to Title Case: uppercase the first letter of the words in a string.*/\nexport class TitleCasePipe implements PipeTransform {\n  transform(input: string): string {\n    return input.length === 0 ? '' :\n      input.replace(/\\w\\S*/g, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase() ));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, startWith } from 'rxjs/operators';\n\nimport { TwainService } from './twain.service';\n\n@Component({\n  selector: 'twain-quote',\n  template: `\n    <p class=\"twain\"><i>{{quote | async}}</i></p>\n    <button (click)=\"getQuote()\">Next quote</button>\n    <p class=\"error\" *ngIf=\"errorMessage\">{{ errorMessage }}</p>`,\n  styles: [\n    `.twain { font-style: italic; } .error { color: red; }`\n  ]\n\n})\nexport class TwainComponent implements OnInit {\n  errorMessage: string;\n  quote: Observable<string>;\n\n  constructor(private twainService: TwainService) {}\n\n  ngOnInit(): void {\n    this.getQuote();\n  }\n\n  getQuote() {\n    this.errorMessage = '';\n    this.quote = this.twainService.getQuote().pipe(\n      startWith('...'),\n      catchError( (err: any) => {\n        // Wait a turn because errorMessage already set once this turn\n        setTimeout(() => this.errorMessage = err.message || err.toString());\n        return of('...'); // reset message to placeholder\n      })\n    );\n  }\n\n}\n","import { Quote } from './quote';\n\nexport const QUOTES: Quote[] = [\n  'Always do right. This will gratify some people and astonish the rest.',\n  'I have never let my schooling interfere with my education.',\n  'Don\\'t go around saying the world owes you a living. The world owes you nothing. It was here first.',\n  'Whenever you find yourself on the side of the majority, it is time to pause and reflect.',\n  'If you tell the truth, you don\\'t have to remember anything.',\n  'Clothes make the man. Naked people have little or no influence on society.',\n  'It\\'s not the size of the dog in the fight, it\\'s the size of the fight in the dog.',\n  'Truth is stranger than fiction, but it is because Fiction is obliged to stick to possibilities; Truth isn\\'t.',\n  'The man who does not read good books has no advantage over the man who cannot read them.',\n  'Get your facts first, and then you can distort them as much as you please.',\n]\n.map((q, i) => ({ id: i + 1, quote: q }));\n","// Mark Twain Quote service gets quotes from server\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, of, throwError } from 'rxjs';\nimport { concat, map, retryWhen, switchMap, take, tap } from 'rxjs/operators';\n\nimport { Quote } from './quote';\n\n@Injectable()\nexport class TwainService {\n  constructor(private http: HttpClient) { }\n\n  private nextId = 1;\n\n  getQuote(): Observable<string> {\n    return Observable.create(observer => observer.next(this.nextId++)).pipe(\n\n      // tap((id: number) => console.log(id)),\n      // tap((id: number) => { throw new Error('Simulated server error'); }),\n\n      switchMap((id: number) => this.http.get<Quote>(`api/quotes/${id}`)),\n      // tap((q : Quote) => console.log(q)),\n      map((q: Quote) => q.quote),\n\n      // `errors` is observable of http.get errors\n      retryWhen(errors => errors.pipe(\n        switchMap((error: HttpErrorResponse)  => {\n          if (error.status === 404) {\n            // Queried for quote that doesn't exist.\n            this.nextId = 1; // retry with quote id:1\n            return of(null); // signal OK to retry\n          }\n          // Some other HTTP error.\n          console.error(error);\n          return throwError('Cannot get Twain quotes from the server');\n        }),\n        take(2),\n        // If a second retry value, then didn't find id:1 and triggers the following error\n        concat(throwError('There are no Twain quotes')) // didn't find id:1\n      ))\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { UserService }       from '../model/user.service';\n\n@Component({\n  selector: 'app-welcome',\n  template: '<h3 class=\"welcome\"><i>{{welcome}}</i></h3>'\n})\nexport class WelcomeComponent  implements OnInit {\n  welcome: string;\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.welcome = this.userService.isLoggedIn ?\n      'Welcome, ' + this.userService.user.name : 'Please log in.';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// main app entry point\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}